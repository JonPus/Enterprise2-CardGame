<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>no.jonpus</groupId>
    <artifactId>Enterprise2-CardGame</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <modules>
        <module>cards-dto</module>
        <module>user-collections</module>
    </modules>

    <properties>
        <version.springboot>2.2.8.RELEASE</version.springboot>
        <version.h2>1.4.197</version.h2>
        <version.postgres>42.1.4</version.postgres>
        <version.jacoco>0.8.5</version.jacoco>
        <version.java>11</version.java>
        <version.surefire-failsafe>3.0.0-M4</version.surefire-failsafe>
        <version.kotlin>1.3.72</version.kotlin>
        <springboot.version>2.3.3.RELEASE</springboot.version>
        <version.junit>5.6.2</version.junit>
        <testcontainers.version>1.12.4</testcontainers.version>
        <surefire-failsafe.version>3.0.0-M4</surefire-failsafe.version>
        <springcloud.version>Hoxton.RELEASE</springcloud.version>
        <restassured.version>4.2.0</restassured.version>
        <springfox.version>3.0.0</springfox.version>
        <awaitility.version>4.0.3</awaitility.version>

        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
    </properties>

    <dependencyManagement>

        <dependencies>

            <!-- Kotlin dependencies -->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${version.kotlin}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${version.kotlin}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-reflect</artifactId>
                <version>${version.kotlin}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-parent</artifactId>
                <version>${version.springboot}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${version.springboot}</version>
                <scope>test</scope>
                <!-- Exclude JUnit 4, which is added by default-->
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- Spring Cloud BOM -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${springcloud.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <!-- SpringFox for Swagger/OpenAPI -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${springfox.version}</version>
            </dependency>

            <!-- Database -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${version.h2}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${version.postgres}</version>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq</artifactId>
                <version>3.12.3</version>
            </dependency>

            <!-- test -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${version.junit}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.rest-assured</groupId>
                <artifactId>rest-assured</artifactId>
                <version>${restassured.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- TestContainers Dependencies -->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <!-- for code coverage -->
                <groupId>org.jacoco</groupId>
                <artifactId>org.jacoco.core</artifactId>
                <version>${version.jacoco}</version>
                <scope>test</scope>
            </dependency>

            <!-- Misc -->

            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.3.1</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>2.3.1</version>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <build>

        <pluginManagement>

            <plugins>

                <!-- Kotlin Maven Plugin -->
                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${version.kotlin}</version>
                    <configuration>
                        <jvmTarget>11</jvmTarget>
                        <args>
                            <arg>-Xjsr305=strict</arg>
                        </args>
                        <compilerPlugins>
                            <plugin>spring</plugin>
                            <plugin>jpa</plugin>
                        </compilerPlugins>
                    </configuration>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
                                    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
                                </sourceDirs>
                            </configuration>
                        </execution>
                        <execution>
                            <id>test-compile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>test-compile</goal>
                            </goals>
                            <configuration>
                                <sourceDirs>
                                    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
                                    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
                                </sourceDirs>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-allopen</artifactId>
                            <version>1.3.72</version>
                        </dependency>
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-noarg</artifactId>
                            <version>1.3.72</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- Maven Failsafe Plugin -->
                <plugin>
                    <!-- Used for integration tests -->
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${surefire-failsafe.version}</version>
                    <configuration>
                        <forkCount>1</forkCount>
                        <redirectTestOutputToFile>true</redirectTestOutputToFile>
                        <rerunFailingTestsCount>3</rerunFailingTestsCount>
                        <argLine>-Xms512m -Xmx4096m</argLine>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Spring Boot Maven Plugin -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${springboot.version}</version>
                    <configuration>
                        <layers>
                            <!-- Separates classes and dependencies into layers for more efficient Docker builds -->
                            <enabled>true</enabled>
                        </layers>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Exec Maven Plugin -->
                <plugin>
                    <!-- To execute external commands - ie. for building Frontend with YARN -->
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>

            </plugins>

        </pluginManagement>

    </build>

</project>